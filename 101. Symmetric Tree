/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return areSymmetricNodes(root.left, root.right);
    }

    public boolean areSymmetricNodes(TreeNode lSubTree, TreeNode rSubTree) {
        if (lSubTree == null && rSubTree == null) {
            return true;
        }

        if (lSubTree == null || rSubTree == null || lSubTree.val != rSubTree.val) {
            return false;
        }

        return areSymmetricNodes(lSubTree.left, rSubTree.right) && areSymmetricNodes(lSubTree.right, rSubTree.left);
        
    }
}
